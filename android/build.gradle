import groovy.json.JsonSlurper

def computeVersionName() {
    // dynamically retrieve version from package.json
    def slurper = new JsonSlurper()
    def json = slurper.parse(file('../package.json'), "utf-8")
    return json.version
}

buildscript {
    repositories {
        jcenter()
        google()
        maven { url 'https://dl.bintray.com/minyushov/gradle' }
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:3.0.1'
        classpath "com.minyushov.gradle:bintray:1.0.1"
    }
}

apply plugin: 'com.android.library'
apply plugin: 'com.minyushov.bintray'

android {
    compileSdkVersion 27
    buildToolsVersion "27.0.3"

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 27
        versionCode 1
        versionName computeVersionName()
    }
    lintOptions {
        abortOnError false
    }
}

repositories {
    mavenCentral()
    google()
    maven { url "https://dl.bintray.com/minyushov/android" }
}

dependencies {
    implementation "com.facebook.react:react-native:0.53.0"

    implementation "com.android.support:appcompat-v7:27.0.2"
    
    testImplementation "junit:junit:4.12"
    testImplementation "org.assertj:assertj-core:2.6.0"
    testImplementation "org.robolectric:robolectric:3.3.2"

    testImplementation "org.easytesting:fest-assert-core:${FEST_ASSERT_CORE_VERSION}"
    testImplementation "org.powermock:powermock-api-mockito:${POWERMOCK_VERSION}"
    testImplementation "org.powermock:powermock-module-junit4-rule:${POWERMOCK_VERSION}"
    testImplementation "org.powermock:powermock-classloading-xstream:${POWERMOCK_VERSION}"
    testImplementation "org.mockito:mockito-core:${MOCKITO_CORE_VERSION}"
}

bintrayUpload {
    dryRun = false
    repo = "android"
    groupId = "com.minyushov.android"
    artifactId = "react-native-image-picker"
    version = "0.26.7.1"
    vcsUrl = "https://github.com/minyushov/react-native-image-picker.git"
    license = "The MIT License (MIT)"
    docs = false
}